{"ast":null,"code":"import AppHeader from \"@/components/AppHeader.vue\";\nimport ProductCard from \"@/components/ProductCard.vue\";\nimport AppFooter from \"@/components/AppFooter.vue\";\nimport axios from \"axios\";\nexport default {\n  components: {\n    AppFooter,\n    AppHeader,\n    ProductCard\n  },\n  data() {\n    return {\n      userId: null,\n      products: []\n    };\n  },\n  created() {\n    this.userId = sessionStorage.getItem('userId');\n    this.fetchFavorites();\n  },\n  methods: {\n    async fetchFavorites() {\n      try {\n        const response = await axios.get(`http://localhost:8000/api/favorites?user_id=${this.userId}`);\n        console.log(\"Избранные товары:\", response.data);\n        this.products = response.data;\n      } catch (error) {\n        console.error(\"Ошибка при получении избранных товаров:\", error);\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"AAyBA,OAAOA,SAAQ,MAAO,4BAA4B;AAClD,OAAOC,WAAU,MAAO,8BAA8B;AACtD,OAAOC,SAAQ,MAAO,4BAA4B;AAClD,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,UAAU,EAAE;IAAEF,SAAS;IAAEF,SAAS;IAAEC;EAAY,CAAC;EACjDI,IAAIA,GAAG;IACL,OAAO;MACLC,MAAM,EAAE,IAAI;MACZC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EAEDC,OAAOA,GAAG;IACR,IAAI,CAACF,MAAK,GAAIG,cAAc,CAACC,OAAO,CAAC,QAAQ,CAAC;IAC9C,IAAI,CAACC,cAAc,CAAC,CAAC;EACvB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,cAAcA,GAAG;MACrB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMV,KAAK,CAACW,GAAG,CAC3B,+CAA8C,IAAI,CAACR,MAAO,EAC/D,CAAC;QACDS,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEH,QAAQ,CAACR,IAAI,CAAC;QAC/C,IAAI,CAACE,QAAO,GAAIM,QAAQ,CAACR,IAAI;MAC/B,EAAE,OAAOY,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;MACjE;IACF;EACF;AACF,CAAC","names":["AppHeader","ProductCard","AppFooter","axios","components","data","userId","products","created","sessionStorage","getItem","fetchFavorites","methods","response","get","console","log","error"],"sourceRoot":"","sources":["/Users/nicolassergeev/WebstormProjects/frontend-ShoesShop/pages/FavoritesPage.vue"],"sourcesContent":["<template>\n  <div class=\"layout-container\">\n    <AppHeader></AppHeader>\n    <div class=\"page-content\">\n      <div class=\"header-section\">\n        <h1 class=\"title\">Ваши избранные товары!</h1>\n      </div>\n      <div class=\"product-grid\">\n        <product-card\n            v-for=\"(product) in products\"\n            :key=\"product.id\"\n            :title=\"product.title\"\n            :price=\"product.price\"\n            :img=\"product.image_urls.length > 0 ? product.image_urls[0] : '../public/favicon.ico'\"\n            :product-id=\"product.id\"\n            :user-id=\"userId\"\n        />\n      </div>\n    </div>\n    <AppFooter></AppFooter>\n  </div>\n</template>\n\n\n<script>\nimport AppHeader from \"@/components/AppHeader.vue\";\nimport ProductCard from \"@/components/ProductCard.vue\";\nimport AppFooter from \"@/components/AppFooter.vue\";\nimport axios from \"axios\";\n\nexport default {\n  components: { AppFooter, AppHeader, ProductCard },\n  data() {\n    return {\n      userId: null,\n      products: [],\n    };\n  },\n\n  created() {\n    this.userId = sessionStorage.getItem('userId');\n    this.fetchFavorites();\n  },\n  methods: {\n    async fetchFavorites() {\n      try {\n        const response = await axios.get(\n            `http://localhost:8000/api/favorites?user_id=${this.userId}`\n        );\n        console.log(\"Избранные товары:\", response.data);\n        this.products = response.data;\n      } catch (error) {\n        console.error(\"Ошибка при получении избранных товаров:\", error);\n      }\n    },\n  },\n};\n</script>\n\n\n\n<style scoped>\n\n.user-id {\n  font-size: 1.2rem;\n  color: #6b7280; /* Серый цвет */\n  margin-left: 0.5rem;\n}\n\n.layout-container {\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n}\n\n.page-content {\n  padding: 2.5rem; /* заменяет p-10 */\n}\n\n.header-section {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 2.5rem; /* заменяет mb-10 */\n}\n\n.title {\n  font-size: 2rem; /* заменяет text-3xl */\n  font-weight: bold;\n}\n\n\n\n.product-grid {\n  display: grid;\n  grid-template-columns: repeat(4, 1fr); /* 4 карточки в строке */\n  gap: 2.5rem; /* Зазор между карточками */\n}\n\n\n\n@media (min-width: 640px) {\n  .product-grid {\n    grid-template-columns: repeat(2, 1fr); /* заменяет sm:grid-cols-2 */\n  }\n}\n\n@media (min-width: 768px) {\n  .product-grid {\n    grid-template-columns: repeat(3, 1fr); /* заменяет md:grid-cols-3 */\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}