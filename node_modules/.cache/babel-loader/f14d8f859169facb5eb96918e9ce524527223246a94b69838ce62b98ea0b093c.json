{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios'; // Импортируем axios для HTTP-запросов\nimport { isValidEmail, isValidPassword } from '@/utils/validation.js';\nimport store from \"../store\";\nexport default {\n  data() {\n    return {\n      form: {\n        email: '',\n        password: ''\n      },\n      error: {\n        email: false,\n        password: false\n      }\n    };\n  },\n  methods: {\n    setVisibility(e) {\n      const getSel = e.target;\n      const getInput = getSel.previousSibling;\n      if (getInput.type === \"password\") {\n        getInput.type = \"text\";\n        getSel.classList.remove(\"bi-eye-slash\");\n        getSel.classList.add(\"bi-eye\");\n      } else {\n        getInput.type = \"password\";\n        getSel.classList.remove(\"bi-eye\");\n        getSel.classList.add(\"bi-eye-slash\");\n      }\n    },\n    addClassInvalid(attr) {\n      const getSel = document.querySelector(`input[name=\"${attr}\"]`);\n      getSel.classList.add('invalid');\n      this.error[attr] = true;\n    },\n    removeClassInvalid(attr) {\n      const getSel = document.querySelector(`input[name=\"${attr}\"]`);\n      getSel.classList.remove('invalid');\n      this.error[attr] = false;\n    },\n    validateEmail() {\n      const attr = 'email';\n      if (this.form[attr].length !== 0) {\n        !isValidEmail(this.form[attr]) ? this.addClassInvalid(attr) : this.removeClassInvalid(attr);\n      }\n    },\n    validatePassword() {\n      const attr = 'password';\n      if (this.form[attr].length !== 0) {\n        !isValidPassword(this.form[attr]) ? this.addClassInvalid(attr) : this.removeClassInvalid(attr);\n      }\n    },\n    async signIn() {\n      const getInputAll = document.querySelectorAll('.error');\n      const emailLength = this.form.email.length > 0;\n      const passwordLength = this.form.password.length > 0;\n      if (emailLength && passwordLength && getInputAll.length === 0) {\n        try {\n          const response = await axios.post('http://localhost:8000/auth/sign-in', {\n            Email: this.form.email,\n            Password: this.form.password\n          });\n          const token = response.data.token;\n          sessionStorage.setItem('authToken', token);\n\n          // userId\n          const userId = response.data.id; // Убедитесь, что ключ совпадает с ответом бэкенда\n\n          // Vuex action вызов\n          store.dispatch('login', userId);\n          sessionStorage.setItem('userId', userId);\n          if (response.status === 200) {\n            this.$router.push('/home');\n          } else {\n            alert('Invalid credentials');\n          }\n        } catch (error) {\n          console.error('Sign In error:', error);\n          alert('Error signing in');\n        }\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","isValidEmail","isValidPassword","store","data","form","email","password","error","methods","setVisibility","e","getSel","target","getInput","previousSibling","type","classList","remove","add","addClassInvalid","attr","document","querySelector","removeClassInvalid","validateEmail","length","validatePassword","signIn","getInputAll","querySelectorAll","emailLength","passwordLength","response","post","Email","Password","token","sessionStorage","setItem","userId","id","dispatch","status","$router","push","alert","console"],"sourceRoot":"","sources":["/Users/nicolassergeev/WebstormProjects/MegaProject/pages/SignIn.vue"],"sourcesContent":["<template>\n  <div class=\"sign-in wrapper\">\n    <h1 class=\"headline sign-in__headline\">Войти</h1>\n\n    <form @submit.prevent=\"signIn\" class=\"form sign-in__form\">\n\n      <div class=\"form-group\">\n        <label class=\"input-wrapper\">Почта\n          <input type=\"email\" class=\"form-control\" v-model=\"form.email\" name=\"email\" @blur=\"validateEmail\"\n                 :class=\"{ error: error.email }\" />\n        </label>\n        <p v-if=\"error.email\" class=\"error-message\"> Введите валидную почту </p>\n      </div>\n\n      <div class=\"form-group\">\n        <label class=\"input-wrapper\">Пароль\n          <input type=\"password\" class=\"form-control\" v-model=\"form.password\" name='password'\n                 @blur=\"validatePassword\" :class=\"{ error: error.password }\" />\n          <i class=\"bi bi-eye-slash icon\" @click=\"setVisibility\"></i>\n        </label>\n        <p v-if=\"error.password\" class=\"error-message\"> Введите валидный пароль </p>\n      </div>\n\n      <button type=\"submit\" class=\"btn form__button\">Войти</button>\n    </form>\n\n    <div class=\"options sign-up__options\">\n      <p class=\"options__description\">Еще нет аккаунта?</p>\n      <router-link class=\"options__link\" to=\"/sign-up\"> Зарегистрироваться </router-link>\n    </div>\n\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'; // Импортируем axios для HTTP-запросов\nimport { isValidEmail, isValidPassword } from '@/utils/validation.js';\nimport store from \"../store\";\n\n\nexport default {\n  data() {\n    return {\n      form: {\n        email: '',\n        password: '',\n      },\n      error: {\n        email: false,\n        password: false,\n      }\n    }\n  },\n  methods: {\n    setVisibility(e) {\n      const getSel = e.target;\n      const getInput = getSel.previousSibling;\n\n      if (getInput.type === \"password\") {\n        getInput.type = \"text\";\n        getSel.classList.remove(\"bi-eye-slash\");\n        getSel.classList.add(\"bi-eye\");\n      } else {\n        getInput.type = \"password\";\n        getSel.classList.remove(\"bi-eye\");\n        getSel.classList.add(\"bi-eye-slash\");\n      }\n    },\n    addClassInvalid(attr) {\n      const getSel = document.querySelector(`input[name=\"${attr}\"]`);\n      getSel.classList.add('invalid');\n      this.error[attr] = true;\n    },\n    removeClassInvalid(attr) {\n      const getSel = document.querySelector(`input[name=\"${attr}\"]`);\n      getSel.classList.remove('invalid');\n      this.error[attr] = false;\n    },\n    validateEmail() {\n      const attr = 'email';\n      if (this.form[attr].length !== 0) {\n        !isValidEmail(this.form[attr]) ? this.addClassInvalid(attr) : this.removeClassInvalid(attr);\n      }\n    },\n    validatePassword() {\n      const attr = 'password'\n      if (this.form[attr].length !== 0) {\n        !isValidPassword(this.form[attr]) ? this.addClassInvalid(attr) : this.removeClassInvalid(attr);\n      }\n    },\n    async signIn() {\n      const getInputAll = document.querySelectorAll('.error');\n\n      const emailLength = this.form.email.length > 0;\n      const passwordLength = this.form.password.length > 0;\n\n      if (emailLength && passwordLength && getInputAll.length === 0) {\n        try {\n          const response = await axios.post('http://localhost:8000/auth/sign-in', {\n            Email: this.form.email,\n            Password: this.form.password,\n          });\n\n          const token = response.data.token;\n\n          sessionStorage.setItem('authToken', token);\n\n          // userId\n          const userId = response.data.id; // Убедитесь, что ключ совпадает с ответом бэкенда\n\n          // Vuex action вызов\n          store.dispatch('login', userId);\n\n          sessionStorage.setItem('userId', userId);\n\n          if (response.status === 200) {\n            this.$router.push('/home');\n          } else {\n            alert('Invalid credentials');\n          }\n        } catch (error) {\n          console.error('Sign In error:', error);\n          alert('Error signing in');\n        }\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.sign-in {\n  display: flex;\n  flex-direction: column;\n  align-items: center; /* Центрирует элементы по горизонтали */\n  justify-content: center; /* Центрирует элементы по вертикали, если родительский контейнер позволяет */\n}\n\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}