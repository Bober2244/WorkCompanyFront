{"ast":null,"code":"import store from '@/store';\nimport ModalWindow from \"@/components/ModalWindow.vue\";\nimport axios from \"axios\"; // импортируем store.js\n\nexport default {\n  components: {\n    ModalWindow\n  },\n  props: {\n    isOpen: {\n      type: Boolean,\n      required: true\n    }\n  },\n  data() {\n    return {\n      itemIdToRemove: null,\n      itemSizeToRemove: null\n    };\n  },\n  emits: [\"close\"],\n  async mounted() {\n    await store.loadCart(); // Загружаем корзину при монтировании компонента\n  },\n\n  computed: {\n    cartItems() {\n      return store.cartItems; // Получаем список товаров из store\n    },\n\n    totalPrice() {\n      return store.totalPrice; // Считаем общую цену через store\n    },\n\n    totalItems() {\n      return store.totalItems; // Получаем общее количество товаров из store\n    }\n  },\n\n  methods: {\n    closeCart() {\n      this.$emit(\"close\");\n    },\n    showModal(itemId, size) {\n      this.itemIdToRemove = itemId;\n      this.itemSizeToRemove = size;\n      this.$refs.confirmationModal.openModal();\n    },\n    async removeItem() {\n      try {\n        const userId = sessionStorage.getItem(\"userId\");\n        const itemId = this.itemIdToRemove;\n        const size = this.itemSizeToRemove;\n        if (!userId) {\n          console.error(\"User is not authenticated\");\n          return;\n        }\n        const url = `http://localhost:8000/api/carts?user_id=${userId}&item_id=${itemId}&size=${size}`;\n        console.log(url);\n        const response = await axios.delete(url);\n        if (response.status === 200) {\n          this.$emit('item-removed', itemId);\n          window.location.reload();\n        } else {\n          console.error('Error removing item from cart:', response.data.message);\n        }\n      } catch (error) {\n        console.error('Error removing item from cart:', error);\n      }\n    },\n    async goToPayment() {\n      const userId = sessionStorage.getItem(\"userId\");\n      try {\n        // Отправляем запрос на создание платежа\n        const paymentResponse = await axios.post('http://localhost:8000/api/payments', {\n          amount: String(this.totalPrice),\n          description: \"Payment for cart items\"\n        });\n\n        // Получаем URL для редиректа на YooKassa\n        const confirmationUrl = paymentResponse.data.confirmation_url;\n        if (confirmationUrl) {\n          await axios.delete(`http://localhost:8000/api/carts/all?user_id=${userId}`);\n          window.location.href = confirmationUrl;\n        } else {\n          console.error('No confirmation URL received');\n        }\n      } catch (error) {\n        console.error('Error initiating payment:', error);\n      }\n    },\n    incrementQuantity(item) {\n      item.quantity += 1;\n      store.updateCartItemQuantity(item.id, item.quantity); // Update the quantity in the store\n    },\n\n    decrementQuantity(item) {\n      if (item.quantity > 1) {\n        item.quantity -= 1;\n        store.updateCartItemQuantity(item.id, item.quantity); // Update the quantity in the store\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["store","ModalWindow","axios","components","props","isOpen","type","Boolean","required","data","itemIdToRemove","itemSizeToRemove","emits","mounted","loadCart","computed","cartItems","totalPrice","totalItems","methods","closeCart","$emit","showModal","itemId","size","$refs","confirmationModal","openModal","removeItem","userId","sessionStorage","getItem","console","error","url","log","response","delete","status","window","location","reload","message","goToPayment","paymentResponse","post","amount","String","description","confirmationUrl","confirmation_url","href","incrementQuantity","item","quantity","updateCartItemQuantity","id","decrementQuantity"],"sourceRoot":"","sources":["/Users/nicolassergeev/WebstormProjects/frontend-ShoesShop/src/components/CartShop.vue"],"sourcesContent":["<template>\n  <div :class=\"['cart-panel', { open: isOpen }]\" @click.self=\"closeCart\">\n    <div class=\"cart-content\">\n      <div class=\"cart-header\">\n        <h3>Корзина ({{totalItems}} шт.)</h3>\n        <img src=\"../../public/emoji-2.png\" alt=\"Корзина\" class=\"cart-icon\" />\n        <button @click=\"closeCart\" class=\"close-button\">\n          <img src=\"../../public/close.svg\" alt=\"Close\" width=\"24\" height=\"24\" />\n        </button>\n      </div>\n      <div v-if=\"cartItems.length\" class=\"cart-items\">\n        <div v-for=\"item in cartItems\" :key=\"item.id\" class=\"cart-item\">\n          <router-link :to=\"{ name: 'ProductDetail', params: { id: item.item_id } }\" class=\"item-title-link\">\n            <h6>{{ item.title }}({{ item.quantity }} шт.)</h6>\n            <h6 class=\"item-size\">Размер: {{ item.size }}</h6>\n          </router-link>\n          <p class=\"item-price\">{{ item.price }} руб.</p>\n\n          <!-- Quantity controls -->\n          <div class=\"quantity-controls\">\n            <button @click=\"decrementQuantity(item)\" class=\"quantity-button\">-</button>\n            <button @click=\"incrementQuantity(item)\" class=\"quantity-button\">+</button>\n          </div>\n\n          <button @click=\"showModal(item.item_id, item.size)\" class=\"remove-button\">X</button>\n        </div>\n        <div class=\"cart-footer\">\n          <h3>Итого: {{ totalPrice }} руб.</h3>\n          <button @click=\"goToPayment\" class=\"form__button\">Перейти к оплате</button>\n        </div>\n      </div>\n      <div v-else>\n        <p >Ваша корзина пуста</p>\n        <img src=\"../../public/emoji-1.png\" alt=\"Корзина\" class=\"cart-icon\" />\n      </div>\n\n    </div>\n  </div>\n\n  <ModalWindow\n      :title=\"'Убрать из корзины?'\"\n      :message=\"'Вы уверены, что хотите удалить из корзины данный товар?'\"\n      ref=\"confirmationModal\"\n      @confirm=\"removeItem\"\n  />\n</template>\n\n<script>\nimport store from '@/store';\nimport ModalWindow from \"@/components/ModalWindow.vue\";\nimport axios from \"axios\"; // импортируем store.js\n\nexport default {\n  components: {ModalWindow},\n  props: {\n    isOpen: {\n      type: Boolean,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      itemIdToRemove: null,\n      itemSizeToRemove: null,\n    };\n  },\n  emits: [\"close\"],\n  async mounted() {\n    await store.loadCart(); // Загружаем корзину при монтировании компонента\n  },\n  computed: {\n    cartItems() {\n      return store.cartItems; // Получаем список товаров из store\n    },\n    totalPrice() {\n      return store.totalPrice; // Считаем общую цену через store\n    },\n    totalItems() {\n      return store.totalItems; // Получаем общее количество товаров из store\n    },\n  },\n  methods: {\n    closeCart() {\n      this.$emit(\"close\");\n    },\n    showModal(itemId, size) {\n      this.itemIdToRemove = itemId;\n      this.itemSizeToRemove = size;\n      this.$refs.confirmationModal.openModal();\n    },\n    async removeItem() {\n      try {\n        const userId = sessionStorage.getItem(\"userId\");\n        const itemId = this.itemIdToRemove;\n        const size = this.itemSizeToRemove;\n\n        if (!userId) {\n          console.error(\"User is not authenticated\");\n          return;\n        }\n        const url = `http://localhost:8000/api/carts?user_id=${userId}&item_id=${itemId}&size=${size}`;\n        console.log(url)\n        const response = await axios.delete(url);\n\n        if (response.status === 200) {\n\n          this.$emit('item-removed', itemId);\n          window.location.reload();\n        } else {\n          console.error('Error removing item from cart:', response.data.message);\n        }\n      } catch (error) {\n        console.error('Error removing item from cart:', error);\n      }\n    },\n    async goToPayment() {\n      const userId = sessionStorage.getItem(\"userId\");\n      try {\n        // Отправляем запрос на создание платежа\n        const paymentResponse = await axios.post('http://localhost:8000/api/payments', {\n          amount: String(this.totalPrice),\n          description: \"Payment for cart items\"\n        });\n\n        // Получаем URL для редиректа на YooKassa\n        const confirmationUrl = paymentResponse.data.confirmation_url;\n\n        if (confirmationUrl) {\n          await axios.delete(`http://localhost:8000/api/carts/all?user_id=${userId}`);\n          window.location.href = confirmationUrl;\n        } else {\n          console.error('No confirmation URL received');\n        }\n      } catch (error) {\n        console.error('Error initiating payment:', error);\n      }\n    },\n    incrementQuantity(item) {\n      item.quantity += 1;\n      store.updateCartItemQuantity(item.id, item.quantity); // Update the quantity in the store\n    },\n    decrementQuantity(item) {\n      if (item.quantity > 1) {\n        item.quantity -= 1;\n        store.updateCartItemQuantity(item.id, item.quantity); // Update the quantity in the store\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.item-title-link {\n  text-decoration: none;\n  color: #333;\n}\n\n.item-title-link:hover {\n  color: #4caf50;\n}\n\n.cart-panel {\n  position: fixed;\n  top: 0;\n  right: 0;\n  width: 370px;\n  height: 100%;\n  background: #fff;\n  box-shadow: -2px 0 10px rgba(0, 0, 0, 0.2);\n  transform: translateX(100%);\n  transition: transform 0.3s ease;\n  z-index: 1000;\n}\n\n.cart-panel.open {\n  transform: translateX(0);\n}\n\n.cart-content {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  padding: 20px;\n  background-color: #f9f9f9;\n  border-radius: 10px;\n}\n\n.cart-header {\n  display: flex;\n  align-items: center;\n  margin-bottom: 15px;\n}\n\n.cart-icon {\n  width: 24px;\n  height: 24px;\n  margin-left: 10px;\n  margin-bottom: 7px;\n}\n\n.cart-items {\n  flex-grow: 1;\n  overflow-y: auto;\n}\n\n.cart-item {\n  display: flex;\n  justify-content: space-between;\n  padding: 12px 0;\n  border-bottom: 1px solid #ddd;\n  font-size: 16px;\n}\n\n.item-title {\n  font-weight: bold;\n  font-size: 16px;\n  color: #333;\n}\n\n.item-price {\n  color: #4caf50;\n  font-size: 16px;\n}\n\n.remove-button {\n  padding: 4px 8px;\n  background-color: transparent;\n  color: #f44336;\n  border: none;\n  cursor: pointer;\n  font-size: 18px;\n  font-weight: bold;\n  transition: color 0.2s;\n}\n\n.remove-button:hover {\n  color: #d32f2f;\n}\n\n.cart-footer {\n  margin-top: 20px;\n  text-align: center;\n}\n\n\n.close-button {\n  align-self: flex-end;\n  background: none;\n  border: none;\n  margin-left: 117px;\n  margin-bottom: 7px;\n  padding: 0;\n  cursor: pointer;\n  transition: transform 0.2s ease;\n}\n\n.close-button img {\n  width: 24px;\n  height: 24px;\n}\n\n.close-button:hover {\n  transform: scale(1.1);\n}\n\nh3 {\n  font-size: 20px;\n  color: #333;\n}\n\n.cart-footer p {\n  font-weight: bold;\n}\n\n.cart-items p {\n  color: #555;\n}\n\n.cart-items .cart-item p {\n  color: #333;\n}\n\n.item-size {\n  color: #555;\n  font-size: 14px; /* Меньший размер шрифта для размера */\n  margin-top: 4px;\n}\n\n.quantity-controls {\n  display: flex;\n  align-items: center;\n}\n\n.quantity-button {\n  padding: 5px 8px;\n  background-color: #f0f0f0;\n  border: 1px solid #ddd;\n  cursor: pointer;\n  font-size: 16px;\n  margin: 0;  /* Убрали отступы между кнопками */\n}\n\n.quantity {\n  font-size: 16px;\n  margin: 0 8px;  /* Оставили отступ между числом и кнопками */\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}