{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted } from 'vue';\nimport { useRoute } from 'vue-router';\nimport axios from 'axios';\nimport AppHeader from \"@/components/AppHeader.vue\";\nimport AppFooter from \"@/components/AppFooter.vue\";\nimport ImageSlider from \"@/components/ImageSlider.vue\";\nimport store from \"../store\"; // Importing the store\n\nexport default {\n  components: {\n    AppFooter,\n    AppHeader,\n    ImageSlider\n  },\n  data() {\n    return {\n      selectedSize: 39 // Default size selection\n    };\n  },\n\n  setup() {\n    const route = useRoute();\n    const product = ref({\n      title: '',\n      images: [],\n      price: '',\n      sizes: [],\n      description: ''\n    });\n\n    // Fetch product data when component is mounted\n    onMounted(async () => {\n      const productId = route.params.id;\n      try {\n        const response = await axios.get(`http://localhost:8000/api/items/${productId}`);\n        const productData = response.data;\n        product.value = {\n          title: productData.title,\n          images: productData.image_urls.slice(1),\n          price: productData.price,\n          sizes: productData.sizes || [35, 35.5, 36, 36.5, 37, 38, 39, 40, 40.5, 41, 41.5, 42, 42.5, 43.5, 44, 45, 45.5],\n          description: productData.description\n        };\n      } catch (error) {\n        console.error(\"Ошибка при загрузке данных продукта:\", error);\n      }\n    });\n\n    // Method to add product to the cart\n    const addToCart = () => {\n      const selectedProduct = {\n        id: route.params.id,\n        title: product.value.title,\n        price: product.value.price,\n        size: this.selectedSize\n      };\n      store.cartItems.push(selectedProduct);\n      axios.post('http://localhost:8000/api/cart', {\n        selectedProduct\n      });\n      console.log(\"Товар добавлен в корзину:\", selectedProduct);\n    };\n    return {\n      product,\n      addToCart\n    };\n  }\n};","map":{"version":3,"mappings":";AAuCA,SAASA,GAAG,EAAEC,SAAQ,QAAS,KAAK;AACpC,SAASC,QAAO,QAAS,YAAY;AACrC,OAAOC,KAAI,MAAO,OAAO;AACzB,OAAOC,SAAQ,MAAO,4BAA4B;AAClD,OAAOC,SAAQ,MAAO,4BAA4B;AAClD,OAAOC,WAAU,MAAO,8BAA8B;AACtD,OAAOC,KAAI,MAAO,UAAU,EAAE;;AAE9B,eAAe;EACbC,UAAU,EAAE;IACVH,SAAS;IACTD,SAAS;IACTE;EACF,CAAC;EACDG,IAAIA,GAAG;IACL,OAAO;MACLC,YAAY,EAAE,EAAE,CAAE;IACpB,CAAC;EACH,CAAC;;EACDC,KAAKA,GAAG;IACN,MAAMC,KAAI,GAAIV,QAAQ,CAAC,CAAC;IACxB,MAAMW,OAAM,GAAIb,GAAG,CAAC;MAClBc,KAAK,EAAE,EAAE;MACTC,MAAM,EAAE,EAAE;MACVC,KAAK,EAAE,EAAE;MACTC,KAAK,EAAE,EAAE;MACTC,WAAW,EAAE;IACf,CAAC,CAAC;;IAEF;IACAjB,SAAS,CAAC,YAAY;MACpB,MAAMkB,SAAQ,GAAIP,KAAK,CAACQ,MAAM,CAACC,EAAE;MAEjC,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMnB,KAAK,CAACoB,GAAG,CAAE,mCAAkCJ,SAAU,EAAC,CAAC;QAChF,MAAMK,WAAU,GAAIF,QAAQ,CAACb,IAAI;QAEjCI,OAAO,CAACY,KAAI,GAAI;UACdX,KAAK,EAAEU,WAAW,CAACV,KAAK;UACxBC,MAAM,EAAES,WAAW,CAACE,UAAU,CAACC,KAAK,CAAC,CAAC,CAAC;UACvCX,KAAK,EAAEQ,WAAW,CAACR,KAAK;UACxBC,KAAK,EAAEO,WAAW,CAACP,KAAI,IAAK,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC;UAC9GC,WAAW,EAAEM,WAAW,CAACN;QAC3B,CAAC;MACH,EAAE,OAAOU,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;MAC9D;IACF,CAAC,CAAC;;IAEF;IACA,MAAME,SAAQ,GAAIA,MAAM;MACtB,MAAMC,eAAc,GAAI;QACtBV,EAAE,EAAET,KAAK,CAACQ,MAAM,CAACC,EAAE;QACnBP,KAAK,EAAED,OAAO,CAACY,KAAK,CAACX,KAAK;QAC1BE,KAAK,EAAEH,OAAO,CAACY,KAAK,CAACT,KAAK;QAC1BgB,IAAI,EAAE,IAAI,CAACtB;MACb,CAAC;MAEDH,KAAK,CAAC0B,SAAS,CAACC,IAAI,CAACH,eAAe,CAAC;MAErC5B,KAAK,CAACgC,IAAI,CAAC,gCAAgC,EAAE;QAACJ;MAAgB,CAAC,CAAC;MAEhEF,OAAO,CAACO,GAAG,CAAC,2BAA2B,EAAEL,eAAe,CAAC;IAC3D,CAAC;IAED,OAAO;MAAClB,OAAO;MAAEiB;IAAS,CAAC;EAC7B;AACF,CAAC","names":["ref","onMounted","useRoute","axios","AppHeader","AppFooter","ImageSlider","store","components","data","selectedSize","setup","route","product","title","images","price","sizes","description","productId","params","id","response","get","productData","value","image_urls","slice","error","console","addToCart","selectedProduct","size","cartItems","push","post","log"],"sourceRoot":"","sources":["/Users/nicolassergeev/WebstormProjects/frontend-ShoesShop/pages/ProductDetail.vue"],"sourcesContent":["<template>\n  <AppHeader></AppHeader>\n  <div class=\"product-detail-container\">\n    <div class=\"product-detail\">\n      <div class=\"image-slider-wrapper\">\n        <ImageSlider :images=\"product.images\" />\n      </div>\n      <div class=\"product-info\">\n        <h1>{{ product.title }}</h1>\n        <p class=\"price\">Цена: {{ product.price }} руб.</p>\n\n        <div class=\"size-selection\">\n          <h2>Выберите размер:</h2>\n          <select\n              class=\"size-dropdown\"\n              v-model=\"selectedSize\"\n          >\n            <option\n                v-for=\"size in product.sizes\"\n                :key=\"size\"\n                :value=\"size\"\n            >\n              {{ size }}\n            </option>\n          </select>\n        </div>\n\n        <p class=\"description\">{{ product.description }}</p>\n\n        <button class=\"form__button\" @click=\"addToCart\">\n          Добавить в корзину за {{ product.price }} руб.\n        </button>\n      </div>\n    </div>\n  </div>\n  <AppFooter></AppFooter>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue';\nimport { useRoute } from 'vue-router';\nimport axios from 'axios';\nimport AppHeader from \"@/components/AppHeader.vue\";\nimport AppFooter from \"@/components/AppFooter.vue\";\nimport ImageSlider from \"@/components/ImageSlider.vue\";\nimport store from \"../store\"; // Importing the store\n\nexport default {\n  components: {\n    AppFooter,\n    AppHeader,\n    ImageSlider\n  },\n  data() {\n    return {\n      selectedSize: 39, // Default size selection\n    };\n  },\n  setup() {\n    const route = useRoute();\n    const product = ref({\n      title: '',\n      images: [],\n      price: '',\n      sizes: [],\n      description: ''\n    });\n\n    // Fetch product data when component is mounted\n    onMounted(async () => {\n      const productId = route.params.id;\n\n      try {\n        const response = await axios.get(`http://localhost:8000/api/items/${productId}`);\n        const productData = response.data;\n\n        product.value = {\n          title: productData.title,\n          images: productData.image_urls.slice(1),\n          price: productData.price,\n          sizes: productData.sizes || [35, 35.5, 36, 36.5, 37, 38, 39, 40, 40.5, 41, 41.5, 42, 42.5, 43.5, 44, 45, 45.5],\n          description: productData.description\n        };\n      } catch (error) {\n        console.error(\"Ошибка при загрузке данных продукта:\", error);\n      }\n    });\n\n    // Method to add product to the cart\n    const addToCart = () => {\n      const selectedProduct = {\n        id: route.params.id,\n        title: product.value.title,\n        price: product.value.price,\n        size: this.selectedSize,\n      };\n\n      store.cartItems.push(selectedProduct);\n\n      axios.post('http://localhost:8000/api/cart', {selectedProduct });\n\n      console.log(\"Товар добавлен в корзину:\", selectedProduct);\n    };\n\n    return {product, addToCart};\n  }\n};\n</script>\n\n<style scoped>\n.product-detail-container {\n  padding: 2rem;\n  max-width: 1200px;\n  margin: 0 auto;\n}\n\n.product-detail {\n  display: flex;\n  gap: 2rem;\n  align-items: center;\n}\n\n.image-slider-wrapper {\n  flex: 1;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.product-info {\n  flex: 2;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n}\n\n.price {\n  font-size: 1.5rem;\n  color: #333;\n  margin: 1rem 0;\n}\n\n.size-selection {\n  margin: 1rem 0;\n}\n\n.description {\n  font-size: 1rem;\n  color: #666;\n  margin: 1rem 0;\n}\n\n.size-dropdown {\n  padding: 10px 15px;\n  font-size: 1rem;\n  border: 2px solid #ddd;\n  border-radius: 8px;\n  background: #f9f9f9;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  transition: all 0.3s ease;\n  width: 100%;\n  max-width: 200px;\n}\n\n.form__button {\n  padding: 1rem;\n  background-color: #4caf50;\n  color: white;\n  border: none;\n  cursor: pointer;\n  font-size: 1.2rem;\n  margin: 1rem 0;\n}\n\n.form__button:hover {\n  background-color: #45a049;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}