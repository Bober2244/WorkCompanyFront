{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { isValidName, isValidEmail, isValidPassword, isValidRepeatPasswod } from '@/utils/validation.js';\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      form: {\n        username: '',\n        email: '',\n        password: '',\n        repeatPassword: '',\n        phoneNumber: ''\n      },\n      error: {\n        username: false,\n        email: false,\n        password: false,\n        repeatPassword: false,\n        phoneNumber: false\n      }\n    };\n  },\n  methods: {\n    setVisibility(e) {\n      const getSel = e.target;\n      const getInput = getSel.previousSibling;\n      if (getInput.type === \"password\") {\n        getInput.type = \"text\";\n        getSel.classList.remove(\"bi-eye-slash\");\n        getSel.classList.add(\"bi-eye\");\n      } else {\n        getInput.type = \"password\";\n        getSel.classList.remove(\"bi-eye\");\n        getSel.classList.add(\"bi-eye-slash\");\n      }\n    },\n    addClassInvalid(attr) {\n      const getSel = document.querySelector(`input[name=\"${attr}\"]`);\n      getSel.classList.add('invalid');\n      this.error[attr] = true;\n    },\n    removeClassInvalid(attr) {\n      const getSel = document.querySelector(`input[name=\"${attr}\"]`);\n      getSel.classList.remove('invalid');\n      this.error[attr] = false;\n    },\n    validateName() {\n      const attr = 'username';\n      if (this.form[attr].length !== 0) {\n        !isValidName(this.form[attr]) ? this.addClassInvalid(attr) : this.removeClassInvalid(attr);\n      }\n    },\n    validatePhoneNumber() {\n      const attr = 'phoneNumber';\n      this.form[attr] = this.form[attr].replace('+', ''); // Убираем '+'\n      if (this.form[attr].startsWith('7')) {\n        this.form[attr] = '8' + this.form[attr].slice(1); // Меняем 7 на 8\n      }\n\n      const phoneRegex = /^[0-9]{11,12}$/;\n      if (this.form[attr].length !== 0) {\n        !phoneRegex.test(this.form[attr]) ? this.addClassInvalid(attr) : this.removeClassInvalid(attr);\n      }\n    },\n    validateEmail() {\n      const attr = 'email';\n      if (this.form[attr].length !== 0) {\n        !isValidEmail(this.form[attr]) ? this.addClassInvalid(attr) : this.removeClassInvalid(attr);\n      }\n    },\n    validatePassword() {\n      const attr = 'password';\n      if (this.form[attr].length !== 0) {\n        !isValidPassword(this.form[attr]) ? this.addClassInvalid(attr) : this.removeClassInvalid(attr);\n      }\n    },\n    validateConfirmPassword() {\n      const attr = 'repeatPassword';\n      const password = 'password';\n      if (this.form[attr].length !== 0) {\n        !isValidRepeatPasswod(this.form[attr], this.form[password]) ? this.addClassInvalid(attr) : this.removeClassInvalid(attr);\n      }\n    },\n    async signUp() {\n      this.validateName();\n      this.validatePhoneNumber();\n      this.validateEmail();\n      this.validatePassword();\n      this.validateConfirmPassword();\n      const hasErrors = Object.values(this.error).some(err => err);\n      if (!hasErrors && this.form.username && this.form.email && this.form.password && this.form.repeatPassword) {\n        try {\n          const response = await axios.post('http://localhost:8000/auth/sign-up', {\n            email: this.form.email,\n            phone_number: this.form.phoneNumber,\n            name: this.form.username,\n            password: this.form.password\n          });\n          console.log('Sign-up successful:', response.data);\n          this.$router.push('/sign-in');\n        } catch (error) {\n          console.error('Error during sign-up:', error.response ? error.response.data : error.message);\n        }\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["isValidName","isValidEmail","isValidPassword","isValidRepeatPasswod","axios","data","form","username","email","password","repeatPassword","phoneNumber","error","methods","setVisibility","e","getSel","target","getInput","previousSibling","type","classList","remove","add","addClassInvalid","attr","document","querySelector","removeClassInvalid","validateName","length","validatePhoneNumber","replace","startsWith","slice","phoneRegex","test","validateEmail","validatePassword","validateConfirmPassword","signUp","hasErrors","Object","values","some","err","response","post","phone_number","name","console","log","$router","push","message"],"sourceRoot":"","sources":["/Users/nicolassergeev/WebstormProjects/frontendShoesShop/pages/SignUp.vue"],"sourcesContent":["<template>\r\n  <div class=\"sign-up wrapper\">\r\n    <h1 class=\"headline sign-up__headline\">Регистрация</h1>\r\n\r\n    <div class=\"form-container\">\r\n      <form class=\"form sign-up__form\" @submit.prevent=\"signUp\">\r\n        <div class=\"form-group\">\r\n          <label class=\"input-wrapper\">Полное имя\r\n            <i class=\"bi bi-question-circle-fill\" v-tooltip data-bs-toggle=\"tooltip\" data-bs-placement=\"bottom\"\r\n               data-bs-title=\"Поле должно содержать 2 слова, каждое из которых состоит из 3 и более символов\"></i>\r\n            <input type=\"text\" class=\"form-control\" v-model=\"form.username\" name=\"username\" @blur=\"validateName\"\r\n                   :class=\"{ error: error.username }\" />\r\n          </label>\r\n          <p v-if=\"error.username\" class=\"error-message\"> Введите имя правильно</p>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label class=\"input-wrapper\">Номер телефона\r\n            <input type=\"tel\" class=\"form-control\" v-model=\"form.phoneNumber\" name=\"phoneNumber\" @blur=\"validatePhoneNumber\"\r\n                   :class=\"{ error: error.phoneNumber }\" />\r\n          </label>\r\n          <p v-if=\"error.phoneNumber\" class=\"error-message\"> Введите корректный номер телефона </p>\r\n        </div>\r\n\r\n\r\n        <div class=\"form-group\">\r\n          <label class=\"input-wrapper\">Почта\r\n            <input type=\"email\" class=\"form-control\" v-model=\"form.email\" name=\"email\" @blur=\"validateEmail\"\r\n                   :class=\"{ error: error.email }\" />\r\n          </label>\r\n          <p v-if=\"error.email\" class=\"error-message\"> Введите валидную почту </p>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label class=\"input-wrapper\">Пароль\r\n            <i class=\"bi bi-question-circle-fill\" v-tooltip data-bs-toggle=\"tooltip\" data-bs-placement=\"bottom\"\r\n               data-bs-title=\"Поле должно содержать 8 и более символов, включая 1 специальный символ и 2 заглавные буквы\"></i>\r\n            <input type=\"password\" class=\"form-control\" v-model=\"form.password\" name='password'\r\n                   @blur=\"validatePassword\" :class=\"{ error: error.password }\" />\r\n            <i class=\"bi bi-eye-slash icon\" @click=\"setVisibility\"></i>\r\n          </label>\r\n          <p v-if=\"error.password\" class=\"error-message\"> Введите валидный пароль </p>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"inputConfirmPassword\" class=\"input-wrapper\">Повторите пароль\r\n            <input type=\"password\" class=\"form-control\" v-model=\"form.repeatPassword\" name=\"repeatPassword\"\r\n                   @blur=\"validateConfirmPassword\" :class=\"{ error: error.repeatPassword }\" />\r\n            <i class=\"bi bi-eye-slash icon\" @click=\"setVisibility\"></i>\r\n          </label>\r\n          <p v-if=\"error.repeatPassword\" class=\"error-message\"> Пароли не совпадают</p>\r\n        </div>\r\n\r\n        <button type=\"submit\" class=\"btn form__button\">Зарегистрироваться </button>\r\n      </form>\r\n    </div>\r\n\r\n    <div class=\"options sign-up__options\">\r\n      <p class=\"options__description\">Уже есть аккаунт?</p>\r\n      <router-link class=\"options__link\" to=\"/sign-in\"> Войти </router-link>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport { isValidName, isValidEmail, isValidPassword, isValidRepeatPasswod } from '@/utils/validation.js';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      form: {\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n        repeatPassword: '',\r\n        phoneNumber: '',\r\n      },\r\n      error: {\r\n        username: false,\r\n        email: false,\r\n        password: false,\r\n        repeatPassword: false,\r\n        phoneNumber: false,\r\n      },\r\n\r\n    }\r\n  },\r\n  methods: {\r\n    setVisibility(e) {\r\n      const getSel = e.target;\r\n      const getInput = getSel.previousSibling;\r\n\r\n      if (getInput.type === \"password\") {\r\n        getInput.type = \"text\";\r\n        getSel.classList.remove(\"bi-eye-slash\");\r\n        getSel.classList.add(\"bi-eye\");\r\n      }\r\n      else {\r\n        getInput.type = \"password\";\r\n        getSel.classList.remove(\"bi-eye\");\r\n        getSel.classList.add(\"bi-eye-slash\");\r\n      }\r\n    },\r\n    addClassInvalid(attr) {\r\n      const getSel = document.querySelector(`input[name=\"${attr}\"]`);\r\n      getSel.classList.add('invalid');\r\n      this.error[attr] = true;\r\n    },\r\n\r\n    removeClassInvalid(attr) {\r\n      const getSel = document.querySelector(`input[name=\"${attr}\"]`);\r\n      getSel.classList.remove('invalid');\r\n      this.error[attr] = false;\r\n    },\r\n\r\n    validateName() {\r\n      const attr = 'username'\r\n      if (this.form[attr].length !== 0) {\r\n        !isValidName(this.form[attr]) ? this.addClassInvalid(attr) : this.removeClassInvalid(attr);\r\n      }\r\n    },\r\n    validatePhoneNumber() {\r\n      const attr = 'phoneNumber';\r\n\r\n      this.form[attr] = this.form[attr].replace('+', ''); // Убираем '+'\r\n      if (this.form[attr].startsWith('7')) {\r\n        this.form[attr] = '8' + this.form[attr].slice(1); // Меняем 7 на 8\r\n      }\r\n      const phoneRegex = /^[0-9]{11,12}$/;\r\n      if (this.form[attr].length !== 0) {\r\n        !phoneRegex.test(this.form[attr]) ? this.addClassInvalid(attr) : this.removeClassInvalid(attr);\r\n      }\r\n    },\r\n    validateEmail() {\r\n      const attr = 'email';\r\n      if (this.form[attr].length !== 0) {\r\n        !isValidEmail(this.form[attr]) ? this.addClassInvalid(attr) : this.removeClassInvalid(attr);\r\n      }\r\n    },\r\n    validatePassword() {\r\n      const attr = 'password'\r\n      if (this.form[attr].length !== 0) {\r\n        !isValidPassword(this.form[attr]) ? this.addClassInvalid(attr) : this.removeClassInvalid(attr);\r\n      }\r\n    },\r\n    validateConfirmPassword() {\r\n      const attr = 'repeatPassword';\r\n      const password = 'password';\r\n      if (this.form[attr].length !== 0) {\r\n        !isValidRepeatPasswod(this.form[attr], this.form[password]) ? this.addClassInvalid(attr) : this.removeClassInvalid(attr);\r\n      }\r\n    },\r\n    async signUp() {\r\n      this.validateName();\r\n      this.validatePhoneNumber();\r\n      this.validateEmail();\r\n      this.validatePassword();\r\n      this.validateConfirmPassword();\r\n\r\n      const hasErrors = Object.values(this.error).some(err => err);\r\n      if (!hasErrors && this.form.username && this.form.email && this.form.password && this.form.repeatPassword) {\r\n        try {\r\n          const response = await axios.post('http://localhost:8000/auth/sign-up', {\r\n            email: this.form.email,\r\n            phone_number: this.form.phoneNumber,\r\n            name: this.form.username,\r\n            password: this.form.password,\r\n          });\r\n          console.log('Sign-up successful:', response.data);\r\n          this.$router.push('/sign-in');\r\n        } catch (error) {\r\n          console.error('Error during sign-up:', error.response ? error.response.data : error.message);\r\n        }\r\n      }\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.sign-up {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh; /* Ensures full height of the viewport */\r\n  text-align: center; /* Centers the text inside the container */\r\n}\r\n\r\n.form-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n}\r\n\r\n.form {\r\n  width: 100%; /* Makes the form stretch to full width */\r\n  max-width: 400px; /* Limits the form width */\r\n}\r\n\r\n.form__button {\r\n  width: auto;\r\n  padding: 10px 20px; /* Custom padding for the button */\r\n}\r\n\r\n.headline {\r\n  margin-bottom: 20px; /* Space below the headline */\r\n  font-size: 2rem; /* Adjust the font size of the headline if necessary */\r\n}\r\n\r\n\r\n</style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}