{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"p\", null, \"Hello world, Role: \" + _toDisplayString($setup.userRole), 1 /* TEXT */), _createElementVNode(\"p\", null, \"User ID: \" + _toDisplayString($setup.userId), 1 /* TEXT */)]);\n}","map":{"version":3,"mappings":";;uBAYEA,oBAGM,cAFJC,oBAAwC,WAArC,qBAAmB,oBAAGC,eAAQ,kBACjCD,oBAA4B,WAAzB,WAAS,oBAAGC,aAAM","names":["_createElementBlock","_createElementVNode","$setup"],"sourceRoot":"","sources":["/Users/nicolassergeev/WebstormProjects/MegaProject/pages/HomePage.vue"],"sourcesContent":["<script setup>\nimport { computed } from 'vue';\n\n// Получаем значения из хранилища\nconst userRole = computed(() => this.$store.getters.getUserRole);\nconst userId = computed(() => this.$store.getters.getUserId);\n\nconsole.log('UserRole:', userRole.value);  // Проверка\nconsole.log('UserId:', userId.value);  // Проверка\n</script>\n\n<template>\n  <div>\n    <p>Hello world, Role: {{ userRole }}</p>\n    <p>User ID: {{ userId }}</p>\n  </div>\n</template>\n\n<style scoped>\n/* Ваши стили */\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}