{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-3071a3c8\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"image-slider\"\n};\nconst _hoisted_2 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $setup.prev && $setup.prev(...args)),\n    class: \"slider-button\"\n  }, \"❮\"), _createElementVNode(\"img\", {\n    src: $setup.currentImage,\n    class: \"slider-image\",\n    alt: \"Product Image\"\n  }, null, 8 /* PROPS */, _hoisted_2), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $setup.next && $setup.next(...args)),\n    class: \"slider-button\"\n  }, \"❯\")]);\n}","map":{"version":3,"mappings":";;;EACOA,KAAK,EAAC;AAAc;;;uBAAzBC,oBAIM,OAJNC,UAIM,GAHJC,oBAAsD;IAA7CC,OAAK,yCAAEC,mCAAI;IAAEL,KAAK,EAAC;KAAgB,GAAC,GAC7CG,oBAAoE;IAA9DG,GAAG,EAAED,mBAAY;IAAEL,KAAK,EAAC,cAAc;IAACO,GAAG,EAAC;uCAClDJ,oBAAsD;IAA7CC,OAAK,yCAAEC,mCAAI;IAAEL,KAAK,EAAC;KAAgB,GAAC","names":["class","_createElementBlock","_hoisted_1","_createElementVNode","onClick","$setup","src","alt"],"sourceRoot":"","sources":["/Users/nicolassergeev/WebstormProjects/frontend-ShoesShop/src/components/ImageSlider.vue"],"sourcesContent":["<template>\n  <div class=\"image-slider\">\n    <button @click=\"prev\" class=\"slider-button\">❮</button>\n    <img :src=\"currentImage\" class=\"slider-image\" alt=\"Product Image\" />\n    <button @click=\"next\" class=\"slider-button\">❯</button>\n  </div>\n</template>\n\n<script>\nimport { computed, ref, onMounted, onUnmounted } from 'vue';\n\nexport default {\n  props: {\n    images: {\n      type: Array,\n      required: true\n    },\n    autoSlideInterval: {\n      type: Number,\n      default: 8000 // Интервал в миллисекундах (3 секунды)\n    }\n  },\n  setup(props) {\n    const currentIndex = ref(0);\n    let autoSlide;\n\n    const currentImage = computed(() => props.images[currentIndex.value]);\n\n    const next = () => {\n      if (currentIndex.value < props.images.length - 1) {\n        currentIndex.value++;\n      } else {\n        currentIndex.value = 0;\n      }\n    };\n\n    const prev = () => {\n      if (currentIndex.value > 0) {\n        currentIndex.value--;\n      } else {\n        currentIndex.value = props.images.length - 1; // Циклический слайдер\n      }\n    };\n\n    // Функция для автоматического перехода\n    const startAutoSlide = () => {\n      autoSlide = setInterval(next, props.autoSlideInterval);\n    };\n\n    // Остановить автоматическое перелистывание\n    const stopAutoSlide = () => {\n      clearInterval(autoSlide);\n    };\n\n    onMounted(() => {\n      startAutoSlide();\n    });\n\n    onUnmounted(() => {\n      stopAutoSlide();\n    });\n\n    return { currentImage, next, prev };\n  }\n};\n</script>\n\n<style scoped>\n.image-slider {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%; /* Слайдер занимает всю ширину контейнера */\n  max-width: 500px; /* Ограничиваем максимальную ширину */\n  margin: auto; /* Центрируем слайдер */\n}\n\n.slider-image {\n  width: 300px; /* Фиксированная ширина для изображения */\n  height: 300px; /* Фиксированная высота для изображения */\n  object-fit: contain; /* Контент вписывается в размеры */\n}\n\n.slider-button {\n  background: none;\n  border: none;\n  font-size: 2.5rem;\n  cursor: pointer;\n  color: #333;\n}\n\n.slider-button:hover {\n  color: #555;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}