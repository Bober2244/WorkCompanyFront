{"ast":null,"code":"import { ref, computed, onMounted } from 'vue';\nimport BidItem from \"@/components/BidItem.vue\";\n\n// Данные для заявок\n\nexport default {\n  __name: 'CustomerScreen',\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const bids = ref([]);\n    const searchQuery = ref(\"\");\n\n    // Метод для загрузки данных\n    const loadBids = () => {\n      // Здесь пример с фейковыми данными, замените на запрос к вашему API\n      bids.value = [{\n        id: 1,\n        dateOfRequest: \"2024-12-10\",\n        constructionPeriod: 6,\n        customer: {\n          id: 1,\n          name: \"John Doe\",\n          email: \"john@example.com\",\n          phone: \"+1234567890\",\n          image: \"1.jpg\"\n        },\n        orders: [{\n          id: 101,\n          startDate: \"2024-12-15\",\n          endDate: \"2024-12-20\",\n          title: \"Заказ 1\",\n          amount: 500\n        }, {\n          id: 102,\n          startDate: \"2024-12-18\",\n          endDate: \"2024-12-24\",\n          title: \"Заказ 2\",\n          amount: 700\n        }]\n      }, {\n        id: 2,\n        dateOfRequest: \"2024-12-12\",\n        constructionPeriod: 12,\n        customer: {\n          id: 2,\n          name: \"Jane Smith\",\n          email: \"jane@example.com\",\n          phone: \"+0987654321\",\n          image: \"2.jpg\"\n        },\n        orders: [{\n          id: 103,\n          startDate: \"2024-12-15\",\n          endDate: \"2024-12-27\",\n          title: \"Order 3\",\n          amount: 1200\n        }]\n      }];\n    };\n\n    // Загружаем данные при монтировании компонента\n    onMounted(() => {\n      loadBids();\n    });\n    const filteredBids = computed(() => {\n      return bids.value.filter(bid => {\n        return bid.customer.name.toLowerCase().includes(searchQuery.value.toLowerCase()) || bid.customer.email.toLowerCase().includes(searchQuery.value.toLowerCase()) || bid.customer.phone.includes(searchQuery.value);\n      });\n    });\n    function createBid() {\n      console.log(\"Кнопка 'Создать заявку' нажата.\");\n      // Логика для создания новой заявки\n    }\n\n    const __returned__ = {\n      bids,\n      searchQuery,\n      loadBids,\n      filteredBids,\n      createBid,\n      ref,\n      computed,\n      onMounted,\n      BidItem\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"mappings":"AAuBA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,KAAK;AAC9C,OAAOC,OAAO,MAAM,0BAA0B;;AAE9C;;;;;;;;IACA,MAAMC,IAAI,GAAGJ,GAAG,CAAC,EAAE,CAAC;IACpB,MAAMK,WAAW,GAAGL,GAAG,CAAC,EAAE,CAAC;;IAE3B;IACA,MAAMM,QAAQ,GAAGA,MAAM;MACrB;MACAF,IAAI,CAACG,KAAK,GAAG,CACX;QACEC,EAAE,EAAE,CAAC;QACLC,aAAa,EAAE,YAAY;QAC3BC,kBAAkB,EAAE,CAAC;QACrBC,QAAQ,EAAE;UACRH,EAAE,EAAE,CAAC;UACLI,IAAI,EAAE,UAAU;UAChBC,KAAK,EAAE,kBAAkB;UACzBC,KAAK,EAAE,aAAa;UACpBC,KAAK,EAAE;QACT,CAAC;QACDC,MAAM,EAAE,CACN;UACER,EAAE,EAAE,GAAG;UACPS,SAAS,EAAE,YAAY;UACvBC,OAAO,EAAE,YAAY;UACrBC,KAAK,EAAE,SAAS;UAChBC,MAAM,EAAE;QACV,CAAC,EACD;UACEZ,EAAE,EAAE,GAAG;UACPS,SAAS,EAAE,YAAY;UACvBC,OAAO,EAAE,YAAY;UACrBC,KAAK,EAAE,SAAS;UAChBC,MAAM,EAAE;QACV,CAAC;MAEL,CAAC,EACD;QACEZ,EAAE,EAAE,CAAC;QACLC,aAAa,EAAE,YAAY;QAC3BC,kBAAkB,EAAE,EAAE;QACtBC,QAAQ,EAAE;UACRH,EAAE,EAAE,CAAC;UACLI,IAAI,EAAE,YAAY;UAClBC,KAAK,EAAE,kBAAkB;UACzBC,KAAK,EAAE,aAAa;UACpBC,KAAK,EAAE;QACT,CAAC;QACDC,MAAM,EAAE,CACN;UACER,EAAE,EAAE,GAAG;UACPS,SAAS,EAAE,YAAY;UACvBC,OAAO,EAAE,YAAY;UACrBC,KAAK,EAAE,SAAS;UAChBC,MAAM,EAAE;QACV,CAAC;MAEL,CAAC,CACF;IACH,CAAC;;IAED;IACAlB,SAAS,CAAC,MAAM;MACdI,QAAQ,CAAC,CAAC;IACZ,CAAC,CAAC;IAEF,MAAMe,YAAY,GAAGpB,QAAQ,CAAC,MAAM;MAClC,OAAOG,IAAI,CAACG,KAAK,CAACe,MAAM,CAACC,GAAG,IAAI;QAC9B,OAAOA,GAAG,CAACZ,QAAQ,CAACC,IAAI,CAACY,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACpB,WAAW,CAACE,KAAK,CAACiB,WAAW,CAAC,CAAC,CAAC,IAC5ED,GAAG,CAACZ,QAAQ,CAACE,KAAK,CAACW,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACpB,WAAW,CAACE,KAAK,CAACiB,WAAW,CAAC,CAAC,CAAC,IAC1ED,GAAG,CAACZ,QAAQ,CAACG,KAAK,CAACW,QAAQ,CAACpB,WAAW,CAACE,KAAK,CAAC;MACpD,CAAC,CAAC;IACJ,CAAC,CAAC;IAEF,SAASmB,SAASA,GAAG;MACnBC,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;MAC9C;IACF","names":["ref","computed","onMounted","BidItem","bids","searchQuery","loadBids","value","id","dateOfRequest","constructionPeriod","customer","name","email","phone","image","orders","startDate","endDate","title","amount","filteredBids","filter","bid","toLowerCase","includes","createBid","console","log"],"sources":["/Users/nicolassergeev/WebstormProjects/MegaProject/pages/Screens/CustomerScreen.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <!-- Поисковая строка -->\n    <div class=\"search-bar my-3\">\n      <input type=\"text\" v-model=\"searchQuery\" class=\"form-control\" placeholder=\"Поиск по имени, email или телефону\" />\n    </div>\n\n    <!-- Заголовок с кнопкой на одной линии -->\n    <div class=\"bids-header\">\n      <h1 class=\"header-title\">Заявки</h1>\n      <button class=\"create-button\" @click=\"createBid\">Создать заявку</button>\n    </div>\n\n    <!-- Список заявок -->\n    <div class=\"bids__list my-3\">\n      <div v-for=\"bid in filteredBids\" :key=\"bid.id\" class=\"my-3\">\n        <BidItem :bid=\"bid\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted } from 'vue';\nimport BidItem from \"@/components/BidItem.vue\";\n\n// Данные для заявок\nconst bids = ref([]);\nconst searchQuery = ref(\"\");\n\n// Метод для загрузки данных\nconst loadBids = () => {\n  // Здесь пример с фейковыми данными, замените на запрос к вашему API\n  bids.value = [\n    {\n      id: 1,\n      dateOfRequest: \"2024-12-10\",\n      constructionPeriod: 6,\n      customer: {\n        id: 1,\n        name: \"John Doe\",\n        email: \"john@example.com\",\n        phone: \"+1234567890\",\n        image: \"1.jpg\",\n      },\n      orders: [\n        {\n          id: 101,\n          startDate: \"2024-12-15\",\n          endDate: \"2024-12-20\",\n          title: \"Заказ 1\",\n          amount: 500,\n        },\n        {\n          id: 102,\n          startDate: \"2024-12-18\",\n          endDate: \"2024-12-24\",\n          title: \"Заказ 2\",\n          amount: 700,\n        },\n      ],\n    },\n    {\n      id: 2,\n      dateOfRequest: \"2024-12-12\",\n      constructionPeriod: 12,\n      customer: {\n        id: 2,\n        name: \"Jane Smith\",\n        email: \"jane@example.com\",\n        phone: \"+0987654321\",\n        image: \"2.jpg\",\n      },\n      orders: [\n        {\n          id: 103,\n          startDate: \"2024-12-15\",\n          endDate: \"2024-12-27\",\n          title: \"Order 3\",\n          amount: 1200,\n        },\n      ],\n    },\n  ];\n};\n\n// Загружаем данные при монтировании компонента\nonMounted(() => {\n  loadBids();\n});\n\nconst filteredBids = computed(() => {\n  return bids.value.filter(bid => {\n    return bid.customer.name.toLowerCase().includes(searchQuery.value.toLowerCase()) ||\n        bid.customer.email.toLowerCase().includes(searchQuery.value.toLowerCase()) ||\n        bid.customer.phone.includes(searchQuery.value);\n  });\n});\n\nfunction createBid() {\n  console.log(\"Кнопка 'Создать заявку' нажата.\");\n  // Логика для создания новой заявки\n}\n</script>\n\n<style scoped>\n.container {\n  width: 100%;\n  max-width: 780px;\n  margin-top: 5rem;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.search-bar input {\n  padding: 10px;\n  font-size: 16px;\n  width: 100%;\n  border-radius: 4px;\n  border: 1px solid #ddd;\n}\n\n.bids-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 1.5rem;\n}\n\n.header-title {\n  font-size: 24px;\n  font-weight: bold;\n  margin: 0;\n}\n\n.create-button {\n  background-color: #6c5ce7;\n  color: white;\n  border: none;\n  padding: 8px 16px;\n  border-radius: 4px;\n  font-size: 14px;\n  cursor: pointer;\n}\n\n.create-button:hover {\n  background-color: #5b4bdb;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}