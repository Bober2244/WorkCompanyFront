{"ast":null,"code":"import Vuex from \"vuex\";\nexport default new Vuex.Store({\n  state: {\n    userId: localStorage.getItem(\"userId\") || null,\n    // Получаем из localStorage, если доступно\n    userRole: localStorage.getItem(\"userRole\") || null // Получаем из localStorage, если доступно\n  },\n\n  mutations: {\n    setUserId(state, userId) {\n      state.userId = userId;\n      localStorage.setItem(\"userId\", userId); // Сохраняем в localStorage\n    },\n\n    setUserRole(state, userRole) {\n      state.userRole = userRole;\n      localStorage.setItem(\"userRole\", userRole); // Сохраняем в localStorage\n    }\n  },\n\n  actions: {\n    login({\n      commit\n    }, {\n      userId,\n      role\n    }) {\n      commit(\"setUserId\", userId);\n      commit(\"setUserRole\", role);\n    },\n    logout({\n      commit\n    }) {\n      commit(\"setUserId\", null);\n      commit(\"setUserRole\", null);\n      localStorage.removeItem(\"userId\"); // Удаляем из localStorage\n      localStorage.removeItem(\"userRole\"); // Удаляем из localStorage\n    }\n  },\n\n  getters: {\n    getUserId(state) {\n      return state.userId;\n    },\n    getUserRole(state) {\n      return state.userRole;\n    }\n  }\n});","map":{"version":3,"names":["Vuex","Store","state","userId","localStorage","getItem","userRole","mutations","setUserId","setItem","setUserRole","actions","login","commit","role","logout","removeItem","getters","getUserId","getUserRole"],"sources":["/Users/nicolassergeev/WebstormProjects/MegaProject/store.js"],"sourcesContent":["import Vuex from \"vuex\";\n\nexport default new Vuex.Store({\n    state: {\n        userId: localStorage.getItem(\"userId\") || null,  // Получаем из localStorage, если доступно\n        userRole: localStorage.getItem(\"userRole\") || null,  // Получаем из localStorage, если доступно\n    },\n    mutations: {\n        setUserId(state, userId) {\n            state.userId = userId;\n            localStorage.setItem(\"userId\", userId);  // Сохраняем в localStorage\n        },\n        setUserRole(state, userRole) {\n            state.userRole = userRole;\n            localStorage.setItem(\"userRole\", userRole);  // Сохраняем в localStorage\n        },\n    },\n    actions: {\n        login({ commit }, { userId, role }) {\n            commit(\"setUserId\", userId);\n            commit(\"setUserRole\", role);\n        },\n        logout({ commit }) {\n            commit(\"setUserId\", null);\n            commit(\"setUserRole\", null);\n            localStorage.removeItem(\"userId\");  // Удаляем из localStorage\n            localStorage.removeItem(\"userRole\");  // Удаляем из localStorage\n        },\n    },\n    getters: {\n        getUserId(state) {\n            return state.userId;\n        },\n        getUserRole(state) {\n            return state.userRole;\n        },\n    },\n});\n"],"mappings":"AAAA,OAAOA,IAAI,MAAM,MAAM;AAEvB,eAAe,IAAIA,IAAI,CAACC,KAAK,CAAC;EAC1BC,KAAK,EAAE;IACHC,MAAM,EAAEC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,IAAI,IAAI;IAAG;IACjDC,QAAQ,EAAEF,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,IAAI,IAAI,CAAG;EACzD,CAAC;;EACDE,SAAS,EAAE;IACPC,SAASA,CAACN,KAAK,EAAEC,MAAM,EAAE;MACrBD,KAAK,CAACC,MAAM,GAAGA,MAAM;MACrBC,YAAY,CAACK,OAAO,CAAC,QAAQ,EAAEN,MAAM,CAAC,CAAC,CAAE;IAC7C,CAAC;;IACDO,WAAWA,CAACR,KAAK,EAAEI,QAAQ,EAAE;MACzBJ,KAAK,CAACI,QAAQ,GAAGA,QAAQ;MACzBF,YAAY,CAACK,OAAO,CAAC,UAAU,EAAEH,QAAQ,CAAC,CAAC,CAAE;IACjD;EACJ,CAAC;;EACDK,OAAO,EAAE;IACLC,KAAKA,CAAC;MAAEC;IAAO,CAAC,EAAE;MAAEV,MAAM;MAAEW;IAAK,CAAC,EAAE;MAChCD,MAAM,CAAC,WAAW,EAAEV,MAAM,CAAC;MAC3BU,MAAM,CAAC,aAAa,EAAEC,IAAI,CAAC;IAC/B,CAAC;IACDC,MAAMA,CAAC;MAAEF;IAAO,CAAC,EAAE;MACfA,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC;MACzBA,MAAM,CAAC,aAAa,EAAE,IAAI,CAAC;MAC3BT,YAAY,CAACY,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAE;MACpCZ,YAAY,CAACY,UAAU,CAAC,UAAU,CAAC,CAAC,CAAE;IAC1C;EACJ,CAAC;;EACDC,OAAO,EAAE;IACLC,SAASA,CAAChB,KAAK,EAAE;MACb,OAAOA,KAAK,CAACC,MAAM;IACvB,CAAC;IACDgB,WAAWA,CAACjB,KAAK,EAAE;MACf,OAAOA,KAAK,CAACI,QAAQ;IACzB;EACJ;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}