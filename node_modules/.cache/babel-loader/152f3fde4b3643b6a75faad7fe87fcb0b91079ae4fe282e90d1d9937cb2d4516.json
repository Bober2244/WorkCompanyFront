{"ast":null,"code":"import { ref } from \"vue\";\nimport axios from \"axios\";\nexport default {\n  props: {\n    title: {\n      type: String,\n      required: true\n    },\n    img: {\n      type: String,\n      required: true\n    },\n    price: {\n      type: Number,\n      required: true\n    },\n    productId: {\n      type: Number,\n      required: true\n    },\n    userId: {\n      type: Number,\n      required: true // ID пользователя должен быть доступен\n    }\n  },\n\n  setup(props) {\n    const isLiked = ref(false);\n\n    // Проверить, есть ли товар в избранном\n    const fetchFavoriteStatus = async () => {\n      try {\n        console.log(\"Запрос избранного для пользователя:\", props.userId);\n        const response = await axios.get(`http://localhost:8000/api/favorites?user_id=${props.userId}`);\n        console.log(\"Ответ API избранного:\", response.data);\n        const favorites = response.data; // Предполагается массив объектов\n        isLiked.value = favorites.some(item => item.id === props.productId);\n        console.log(`Товар ${props.productId} в избранном:`, isLiked.value);\n      } catch (error) {\n        console.error(\"Ошибка при проверке избранного:\", error);\n      }\n    };\n\n    // Добавление/удаление из избранного\n    const toggleFavorite = async () => {\n      try {\n        console.log(`Изменение избранного для товара: ${props.productId}`);\n        if (isLiked.value) {\n          // Удаление из избранного\n          console.log(\"Удаление из избранного\");\n          await axios.delete(`http://localhost:8000/api/favorites?user_id=${props.userId}&item_id=${props.productId}`);\n        } else {\n          // Добавление в избранное\n          console.log(\"Добавление в избранное\");\n          await axios.post(\"http://localhost:8000/api/favorites\", {\n            user_id: props.userId,\n            item_id: props.productId\n          });\n        }\n        isLiked.value = !isLiked.value;\n        console.log(`Новое состояние isLiked: ${isLiked.value}`);\n      } catch (error) {\n        console.error(\"Ошибка при обновлении избранного:\", error);\n      }\n    };\n    fetchFavoriteStatus();\n    return {\n      isLiked,\n      ToggleFavorite: toggleFavorite\n    };\n  }\n};","map":{"version":3,"mappings":"AAmCA,SAASA,GAAE,QAAS,KAAK;AACzB,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,KAAK,EAAE;IACLC,KAAK,EAAE;MACLC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ,CAAC;IACDC,GAAG,EAAE;MACHH,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ,CAAC;IACDE,KAAK,EAAE;MACLJ,IAAI,EAAEK,MAAM;MACZH,QAAQ,EAAE;IACZ,CAAC;IACDI,SAAS,EAAE;MACTN,IAAI,EAAEK,MAAM;MACZH,QAAQ,EAAE;IACZ,CAAC;IACDK,MAAM,EAAE;MACNP,IAAI,EAAEK,MAAM;MACZH,QAAQ,EAAE,IAAI,CAAE;IAClB;EACF,CAAC;;EACDM,KAAKA,CAACV,KAAK,EAAE;IACX,MAAMW,OAAM,GAAIb,GAAG,CAAC,KAAK,CAAC;;IAE1B;IACA,MAAMc,mBAAkB,GAAI,YAAY;MACtC,IAAI;QACFC,OAAO,CAACC,GAAG,CAAC,qCAAqC,EAAEd,KAAK,CAACS,MAAM,CAAC;QAChE,MAAMM,QAAO,GAAI,MAAMhB,KAAK,CAACiB,GAAG,CAC3B,+CAA8ChB,KAAK,CAACS,MAAO,EAChE,CAAC;QACDI,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEC,QAAQ,CAACE,IAAI,CAAC;QAEnD,MAAMC,SAAQ,GAAIH,QAAQ,CAACE,IAAI,EAAE;QACjCN,OAAO,CAACQ,KAAI,GAAID,SAAS,CAACE,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAC,KAAMtB,KAAK,CAACQ,SAAS,CAAC;QAErEK,OAAO,CAACC,GAAG,CAAE,SAAQd,KAAK,CAACQ,SAAS,eAAe,EAAEG,OAAO,CAACQ,KAAK,CAAC;MACrE,EAAE,OAAOI,KAAK,EAAE;QACdV,OAAO,CAACU,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACzD;IACF,CAAC;;IAGD;IACA,MAAMC,cAAa,GAAI,YAAY;MACjC,IAAI;QACFX,OAAO,CAACC,GAAG,CAAE,oCAAmCd,KAAK,CAACQ,SAAU,EAAC,CAAC;QAClE,IAAIG,OAAO,CAACQ,KAAK,EAAE;UACjB;UACAN,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;UACrC,MAAMf,KAAK,CAAC0B,MAAM,CACb,+CAA8CzB,KAAK,CAACS,MAAO,YAAWT,KAAK,CAACQ,SAAU,EAC3F,CAAC;QACH,OAAO;UACL;UACAK,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;UACrC,MAAMf,KAAK,CAAC2B,IAAI,CAAC,qCAAqC,EAAE;YACtDC,OAAO,EAAE3B,KAAK,CAACS,MAAM;YACrBmB,OAAO,EAAE5B,KAAK,CAACQ;UACjB,CAAC,CAAC;QACJ;QACAG,OAAO,CAACQ,KAAI,GAAI,CAACR,OAAO,CAACQ,KAAK;QAC9BN,OAAO,CAACC,GAAG,CAAE,4BAA2BH,OAAO,CAACQ,KAAM,EAAC,CAAC;MAC1D,EAAE,OAAOI,KAAK,EAAE;QACdV,OAAO,CAACU,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MAC3D;IACF,CAAC;IAGDX,mBAAmB,CAAC,CAAC;IAErB,OAAO;MACLD,OAAO;MACPkB,cAAc,EAAEL;IAClB,CAAC;EACH;AACF,CAAC","names":["ref","axios","props","title","type","String","required","img","price","Number","productId","userId","setup","isLiked","fetchFavoriteStatus","console","log","response","get","data","favorites","value","some","item","id","error","toggleFavorite","delete","post","user_id","item_id","ToggleFavorite"],"sourceRoot":"","sources":["/Users/nicolassergeev/WebstormProjects/frontend-ShoesShop/src/components/ProductCard.vue"],"sourcesContent":["<template>\n  <div\n      class=\"product-card relative flex flex-col w-full max-w-sm border border-gray-300 rounded-xl p-5 cursor-pointer transition-transform transform hover:scale-105 hover:shadow-lg\"\n  >\n    <!-- Лайк в левом верхнем углу -->\n    <div class=\"absolute top-4 left-4 z-10\">\n      <img\n          :src=\"isLiked ? '/like-1.svg' : '/like-2.svg'\"\n          alt=\"Favorite\"\n          class=\"w-6 h-6 cursor-pointer\"\n          @click.stop=\"ToggleFavorite\"\n      />\n    </div>\n\n    <!-- Картинка товара -->\n    <router-link :to=\"`/product/${productId}`\" class=\"product-link\">\n      <img :src=\"img\" alt=\"Sneaker\" class=\"w-full h-48 object-cover rounded-lg mb-4\"/>\n      <h3 class=\"font-semibold text-lg mb-2 truncate\">{{ title }}</h3>\n    </router-link>\n\n    <!-- Цена и кнопка добавления в корзину -->\n    <div class=\"price-container flex justify-between items-center mt-4\">\n      <div class=\"price-text flex items-center\">\n        <span class=\"block text-sm text-gray-600 mr-2\">Цена:</span>\n        <span class=\"font-bold text-lg text-gray-800 price-number\">{{ price }}</span>\n        <span class=\"rub-text\">руб.</span>\n      </div>\n      <button class=\"add-to-cart-btn\" @click=\"addToCart\">\n        <img src=\"/plus.svg\" alt=\"Add to cart\" class=\"w-6 h-6\"/>\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref } from \"vue\";\nimport axios from \"axios\";\n\nexport default {\n  props: {\n    title: {\n      type: String,\n      required: true,\n    },\n    img: {\n      type: String,\n      required: true,\n    },\n    price: {\n      type: Number,\n      required: true,\n    },\n    productId: {\n      type: Number,\n      required: true,\n    },\n    userId: {\n      type: Number,\n      required: true, // ID пользователя должен быть доступен\n    },\n  },\n  setup(props) {\n    const isLiked = ref(false);\n\n    // Проверить, есть ли товар в избранном\n    const fetchFavoriteStatus = async () => {\n      try {\n        console.log(\"Запрос избранного для пользователя:\", props.userId);\n        const response = await axios.get(\n            `http://localhost:8000/api/favorites?user_id=${props.userId}`\n        );\n        console.log(\"Ответ API избранного:\", response.data);\n\n        const favorites = response.data; // Предполагается массив объектов\n        isLiked.value = favorites.some((item) => item.id === props.productId);\n\n        console.log(`Товар ${props.productId} в избранном:`, isLiked.value);\n      } catch (error) {\n        console.error(\"Ошибка при проверке избранного:\", error);\n      }\n    };\n\n\n    // Добавление/удаление из избранного\n    const toggleFavorite = async () => {\n      try {\n        console.log(`Изменение избранного для товара: ${props.productId}`);\n        if (isLiked.value) {\n          // Удаление из избранного\n          console.log(\"Удаление из избранного\");\n          await axios.delete(\n              `http://localhost:8000/api/favorites?user_id=${props.userId}&item_id=${props.productId}`\n          );\n        } else {\n          // Добавление в избранное\n          console.log(\"Добавление в избранное\");\n          await axios.post(\"http://localhost:8000/api/favorites\", {\n            user_id: props.userId,\n            item_id: props.productId,\n          });\n        }\n        isLiked.value = !isLiked.value;\n        console.log(`Новое состояние isLiked: ${isLiked.value}`);\n      } catch (error) {\n        console.error(\"Ошибка при обновлении избранного:\", error);\n      }\n    };\n\n\n    fetchFavoriteStatus();\n\n    return {\n      isLiked,\n      ToggleFavorite: toggleFavorite,\n    };\n  },\n};\n\n</script>\n\n<style scoped>\n.product-card {\n  border: 1px solid #ddd;\n  border-radius: 0.75rem;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  position: relative; /* Обязательно для работы absolute элементов */\n}\n\n.product-card:hover {\n  transform: scale(1.05);\n  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.15);\n}\n\n.add-to-cart-btn {\n  background-color: #f3f4f6;\n  border: none;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0.5rem;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\n.add-to-cart-btn:hover {\n  background-color: #e5e7eb;\n}\n\n.price-container {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 1rem;\n}\n\n\nimg {\n  transition: transform 0.3s ease-in-out;\n}\n\nimg:hover {\n  transform: scale(1.05);\n}\n\n\n\n.price-text {\n  display: flex;\n  align-items: center;\n}\n\n.price-text .text-sm {\n  margin-right: 0.5rem;\n}\n\n.add-to-cart-btn {\n  margin-left: 1rem;\n}\n\n.price-text .font-bold {\n  font-size: 1.25rem; /* Увеличиваем размер шрифта */\n}\n\n.price-text .price-number {\n  font-weight: bold; /* Число будет жирным */\n}\n\n.price-text .rub-text {\n  font-weight: bold; /* Жирный шрифт для руб. */\n  font-size: 1.25rem; /* Размер шрифта для \"руб.\" */\n  margin-left: 0.5rem; /* Небольшой отступ слева */\n}\n\n/* Сброс стилей ссылки для текста */\n.product-link {\n  text-decoration: none; /* Убираем подчеркивание */\n  color: inherit; /* Наследуем цвет от родителя */\n}\n\n.product-link h3 {\n  color: inherit; /* Наследуем цвет от родителя для заголовка */\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}