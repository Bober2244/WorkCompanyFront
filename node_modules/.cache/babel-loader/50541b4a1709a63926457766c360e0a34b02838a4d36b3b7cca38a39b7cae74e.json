{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios'; // Импортируем axios для HTTP-запросов\nimport { isValidEmail } from \"@/utils/validation\";\nexport default {\n  data() {\n    return {\n      form: {\n        email: '',\n        password: ''\n      },\n      error: {\n        email: false\n      }\n    };\n  },\n  methods: {\n    setVisibility(e) {\n      const getSel = e.target;\n      const getInput = getSel.previousSibling;\n      if (getInput.type === \"password\") {\n        getInput.type = \"text\";\n        getSel.classList.remove(\"bi-eye-slash\");\n        getSel.classList.add(\"bi-eye\");\n      } else {\n        getInput.type = \"password\";\n        getSel.classList.remove(\"bi-eye\");\n        getSel.classList.add(\"bi-eye-slash\");\n      }\n    },\n    addClassInvalid(attr) {\n      const getSel = document.querySelector(`input[name=\"${attr}\"]`);\n      getSel.classList.add('invalid');\n      this.error[attr] = true;\n    },\n    removeClassInvalid(attr) {\n      const getSel = document.querySelector(`input[name=\"${attr}\"]`);\n      getSel.classList.remove('invalid');\n      this.error[attr] = false;\n    },\n    validateEmail() {\n      const attr = 'email';\n      if (this.form[attr].length !== 0) {\n        !isValidEmail(this.form[attr]) ? this.addClassInvalid(attr) : this.removeClassInvalid(attr);\n      }\n    },\n    async signIn() {\n      const getInputAll = document.querySelectorAll('.error');\n      const emailLength = this.form.email.length > 0;\n      const passwordLength = this.form.password.length > 0;\n      if (emailLength && passwordLength && getInputAll.length === 0) {\n        try {\n          const response = await axios.post('https://localhost:7265/Auth/login', {\n            Email: this.form.email,\n            Password: this.form.password\n          }, {\n            withCredentials: true // Добавляем эту настройку\n          });\n\n          console.log(response);\n          const token = response.data.jwt;\n          if (token && response.status === 200) {\n            localStorage.setItem('jwt', token);\n            const userId = response.data.id;\n            console.log(userId);\n            const role = response.data.role;\n            console.log(role);\n            this.$store.dispatch('login', {\n              userId: response.data.userId,\n              // ID пользователя, полученное с сервера\n              role: response.data.role // Роль пользователя, полученная с сервера\n            });\n\n            this.$router.push('/home');\n          } else {\n            alert('Invalid credentials');\n          }\n        } catch (error) {\n          console.error('Sign In error:', error);\n          alert('Error signing in');\n        }\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";AAiCA,OAAOA,KAAI,MAAO,OAAO,EAAE;AAC3B,SAAQC,YAAY,QAAO,oBAAoB;AAC/C,eAAe;EACbC,IAAIA,GAAG;IACL,OAAO;MACLC,IAAI,EAAE;QACJC,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE;MACZ,CAAC;MACDC,KAAK,EAAE;QACLF,KAAK,EAAE;MACT;IACF;EACF,CAAC;EACDG,OAAO,EAAE;IACPC,aAAaA,CAACC,CAAC,EAAE;MACf,MAAMC,MAAK,GAAID,CAAC,CAACE,MAAM;MACvB,MAAMC,QAAO,GAAIF,MAAM,CAACG,eAAe;MAEvC,IAAID,QAAQ,CAACE,IAAG,KAAM,UAAU,EAAE;QAChCF,QAAQ,CAACE,IAAG,GAAI,MAAM;QACtBJ,MAAM,CAACK,SAAS,CAACC,MAAM,CAAC,cAAc,CAAC;QACvCN,MAAM,CAACK,SAAS,CAACE,GAAG,CAAC,QAAQ,CAAC;MAChC,OAAO;QACLL,QAAQ,CAACE,IAAG,GAAI,UAAU;QAC1BJ,MAAM,CAACK,SAAS,CAACC,MAAM,CAAC,QAAQ,CAAC;QACjCN,MAAM,CAACK,SAAS,CAACE,GAAG,CAAC,cAAc,CAAC;MACtC;IACF,CAAC;IACDC,eAAeA,CAACC,IAAI,EAAE;MACpB,MAAMT,MAAK,GAAIU,QAAQ,CAACC,aAAa,CAAE,eAAcF,IAAK,IAAG,CAAC;MAC9DT,MAAM,CAACK,SAAS,CAACE,GAAG,CAAC,SAAS,CAAC;MAC/B,IAAI,CAACX,KAAK,CAACa,IAAI,IAAI,IAAI;IACzB,CAAC;IACDG,kBAAkBA,CAACH,IAAI,EAAE;MACvB,MAAMT,MAAK,GAAIU,QAAQ,CAACC,aAAa,CAAE,eAAcF,IAAK,IAAG,CAAC;MAC9DT,MAAM,CAACK,SAAS,CAACC,MAAM,CAAC,SAAS,CAAC;MAClC,IAAI,CAACV,KAAK,CAACa,IAAI,IAAI,KAAK;IAC1B,CAAC;IACDI,aAAaA,GAAG;MACd,MAAMJ,IAAG,GAAI,OAAO;MACpB,IAAI,IAAI,CAAChB,IAAI,CAACgB,IAAI,CAAC,CAACK,MAAK,KAAM,CAAC,EAAE;QAChC,CAACvB,YAAY,CAAC,IAAI,CAACE,IAAI,CAACgB,IAAI,CAAC,IAAI,IAAI,CAACD,eAAe,CAACC,IAAI,IAAI,IAAI,CAACG,kBAAkB,CAACH,IAAI,CAAC;MAC7F;IACF,CAAC;IACD,MAAMM,MAAMA,GAAG;MACb,MAAMC,WAAU,GAAIN,QAAQ,CAACO,gBAAgB,CAAC,QAAQ,CAAC;MAEvD,MAAMC,WAAU,GAAI,IAAI,CAACzB,IAAI,CAACC,KAAK,CAACoB,MAAK,GAAI,CAAC;MAC9C,MAAMK,cAAa,GAAI,IAAI,CAAC1B,IAAI,CAACE,QAAQ,CAACmB,MAAK,GAAI,CAAC;MAEpD,IAAII,WAAU,IAAKC,cAAa,IAAKH,WAAW,CAACF,MAAK,KAAM,CAAC,EAAE;QAC7D,IAAI;UACF,MAAMM,QAAO,GAAI,MAAM9B,KAAK,CAAC+B,IAAI,CAAC,mCAAmC,EAAE;YACrEC,KAAK,EAAE,IAAI,CAAC7B,IAAI,CAACC,KAAK;YACtB6B,QAAQ,EAAE,IAAI,CAAC9B,IAAI,CAACE;UACtB,CAAC,EAAE;YACD6B,eAAe,EAAE,IAAG,CAAG;UACzB,CAAC,CAAC;;UAEFC,OAAO,CAACC,GAAG,CAACN,QAAQ,CAAC;UACrB,MAAMO,KAAI,GAAIP,QAAQ,CAAC5B,IAAI,CAACoC,GAAG;UAE/B,IAAID,KAAI,IAAKP,QAAQ,CAACS,MAAK,KAAM,GAAG,EAAE;YAEpCC,YAAY,CAACC,OAAO,CAAC,KAAK,EAAEJ,KAAK,CAAC;YAElC,MAAMK,MAAK,GAAIZ,QAAQ,CAAC5B,IAAI,CAACyC,EAAE;YAC/BR,OAAO,CAACC,GAAG,CAACM,MAAM,CAAC;YACnB,MAAME,IAAG,GAAId,QAAQ,CAAC5B,IAAI,CAAC0C,IAAI;YAC/BT,OAAO,CAACC,GAAG,CAACQ,IAAI,CAAC;YAEjB,IAAI,CAACC,MAAM,CAACC,QAAQ,CAAC,OAAO,EAAE;cAC5BJ,MAAM,EAAEZ,QAAQ,CAAC5B,IAAI,CAACwC,MAAM;cAAE;cAC9BE,IAAI,EAAEd,QAAQ,CAAC5B,IAAI,CAAC0C,IAAI,CAAE;YAC5B,CAAC,CAAC;;YAGF,IAAI,CAACG,OAAO,CAACC,IAAI,CAAC,OAAO,CAAC;UAC5B,OAAO;YACLC,KAAK,CAAC,qBAAqB,CAAC;UAC9B;QACF,EAAE,OAAO3C,KAAK,EAAE;UACd6B,OAAO,CAAC7B,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;UACtC2C,KAAK,CAAC,kBAAkB,CAAC;QAC3B;MACF;IACF;EAEF;AACF","names":["axios","isValidEmail","data","form","email","password","error","methods","setVisibility","e","getSel","target","getInput","previousSibling","type","classList","remove","add","addClassInvalid","attr","document","querySelector","removeClassInvalid","validateEmail","length","signIn","getInputAll","querySelectorAll","emailLength","passwordLength","response","post","Email","Password","withCredentials","console","log","token","jwt","status","localStorage","setItem","userId","id","role","$store","dispatch","$router","push","alert"],"sourceRoot":"","sources":["/Users/nicolassergeev/WebstormProjects/MegaProject/pages/SignIn.vue"],"sourcesContent":["<template>\n  <div class=\"sign-in wrapper\">\n    <h1 class=\"headline sign-in__headline\">Войти</h1>\n\n    <form @submit.prevent=\"signIn\" class=\"form sign-in__form\">\n\n      <div class=\"form-group\">\n        <label class=\"input-wrapper\">Почта\n          <input type=\"email\" class=\"form-control\" v-model=\"form.email\" name=\"email\" @blur=\"validateEmail\"\n                 :class=\"{ error: error.email }\" />\n        </label>\n        <p v-if=\"error.email\" class=\"error-message\"> Введите валидную почту </p>\n      </div>\n\n      <div class=\"form-group\">\n        <label class=\"input-wrapper\">Пароль\n          <input type=\"password\" class=\"form-control\" v-model=\"form.password\" name=\"password\" />\n          <i class=\"bi bi-eye-slash icon\" @click=\"setVisibility\"></i>\n        </label>\n      </div>\n\n      <button type=\"submit\" class=\"btn form__button\">Войти</button>\n    </form>\n\n    <div class=\"options sign-up__options\">\n      <p class=\"options__description\">Еще нет аккаунта?</p>\n      <router-link class=\"options__link\" to=\"/sign-up\"> Зарегистрироваться </router-link>\n    </div>\n\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'; // Импортируем axios для HTTP-запросов\nimport {isValidEmail} from \"@/utils/validation\";\nexport default {\n  data() {\n    return {\n      form: {\n        email: '',\n        password: '',\n      },\n      error: {\n        email: false,\n      }\n    }\n  },\n  methods: {\n    setVisibility(e) {\n      const getSel = e.target;\n      const getInput = getSel.previousSibling;\n\n      if (getInput.type === \"password\") {\n        getInput.type = \"text\";\n        getSel.classList.remove(\"bi-eye-slash\");\n        getSel.classList.add(\"bi-eye\");\n      } else {\n        getInput.type = \"password\";\n        getSel.classList.remove(\"bi-eye\");\n        getSel.classList.add(\"bi-eye-slash\");\n      }\n    },\n    addClassInvalid(attr) {\n      const getSel = document.querySelector(`input[name=\"${attr}\"]`);\n      getSel.classList.add('invalid');\n      this.error[attr] = true;\n    },\n    removeClassInvalid(attr) {\n      const getSel = document.querySelector(`input[name=\"${attr}\"]`);\n      getSel.classList.remove('invalid');\n      this.error[attr] = false;\n    },\n    validateEmail() {\n      const attr = 'email';\n      if (this.form[attr].length !== 0) {\n        !isValidEmail(this.form[attr]) ? this.addClassInvalid(attr) : this.removeClassInvalid(attr);\n      }\n    },\n    async signIn() {\n      const getInputAll = document.querySelectorAll('.error');\n\n      const emailLength = this.form.email.length > 0;\n      const passwordLength = this.form.password.length > 0;\n\n      if (emailLength && passwordLength && getInputAll.length === 0) {\n        try {\n          const response = await axios.post('https://localhost:7265/Auth/login', {\n            Email: this.form.email,\n            Password: this.form.password,\n          }, {\n            withCredentials: true  // Добавляем эту настройку\n          });\n\n          console.log(response);\n          const token = response.data.jwt;\n\n          if (token && response.status === 200) {\n\n            localStorage.setItem('jwt', token);\n\n            const userId = response.data.id;\n            console.log(userId);\n            const role = response.data.role;\n            console.log(role);\n\n            this.$store.dispatch('login', {\n              userId: response.data.userId, // ID пользователя, полученное с сервера\n              role: response.data.role, // Роль пользователя, полученная с сервера\n            });\n\n\n            this.$router.push('/home');\n          } else {\n            alert('Invalid credentials');\n          }\n        } catch (error) {\n          console.error('Sign In error:', error);\n          alert('Error signing in');\n        }\n      }\n    }\n\n  }\n}\n</script>\n\n<style scoped>\n.sign-in {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}